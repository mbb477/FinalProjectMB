[
  {
    "objectID": "Modeling.html",
    "href": "Modeling.html",
    "title": "Modeling of the Diabetes Health Indicators Set",
    "section": "",
    "text": "Introduction\n\n#diabetes"
  },
  {
    "objectID": "EDA.html",
    "href": "EDA.html",
    "title": "Exploratory Data Analysis of the Diabetes Health Indicators Set",
    "section": "",
    "text": "Introduction\nThe Behavioral Risk Factor Surveillance System (BRFSS) is a system run by the Centers for Disease Control and Prevention (CDC) that uses telephone surveys to collect health-related information from individuals in the United States every year. The system began in 1984 and collects more than 400,000 responses each year. The Diabetes Health Indicators Dataset that will be discussed here is a subset of the data obtained from the BRFSS for 2015. This data set contains 21 of the original 330 variables and 253.680 of the 441,455 original responses. Retention of the 21 variables in this data was based on what was believed to have potential relevance for diabetes.\nThe goal of this document is to use exploratory data analysis (EDA) to understand the data through validation, examining missingness, cleaning up the data and investigating distributions. This information can also help us decide what variables to include in our model. The end goal of this project is to obtain the best model to predict diabetes. Details of the EDA are presented below. The response variable is Diabetes_binary, where 0 indicates that the individual does not have diabetes and 1 means the individual has prediabetes or diabetes. The variables chosen to be included in the modeling process are ……. body mass index (BMI)…..\n\n\nEDA Analysis\nThe first step is to read in the data. Since the data is a csv file, this can be done using read_csv() from tidyverse.\n\nlibrary(tidyverse)\nlibrary(psych)\nlibrary(caret)\n# read in data set\ndiabetes_data &lt;- read_csv(\"diabetes_binary_health_indicators_BRFSS2015.csv\")\ndiabetes_data\n\n# A tibble: 253,680 × 22\n   Diabetes_binary HighBP HighChol CholCheck   BMI Smoker Stroke\n             &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1               0      1        1         1    40      1      0\n 2               0      0        0         0    25      1      0\n 3               0      1        1         1    28      0      0\n 4               0      1        0         1    27      0      0\n 5               0      1        1         1    24      0      0\n 6               0      1        1         1    25      1      0\n 7               0      1        0         1    30      1      0\n 8               0      1        1         1    25      1      0\n 9               1      1        1         1    30      1      0\n10               0      0        0         1    24      0      0\n# ℹ 253,670 more rows\n# ℹ 15 more variables: HeartDiseaseorAttack &lt;dbl&gt;, PhysActivity &lt;dbl&gt;,\n#   Fruits &lt;dbl&gt;, Veggies &lt;dbl&gt;, HvyAlcoholConsump &lt;dbl&gt;, AnyHealthcare &lt;dbl&gt;,\n#   NoDocbcCost &lt;dbl&gt;, GenHlth &lt;dbl&gt;, MentHlth &lt;dbl&gt;, PhysHlth &lt;dbl&gt;,\n#   DiffWalk &lt;dbl&gt;, Sex &lt;dbl&gt;, Age &lt;dbl&gt;, Education &lt;dbl&gt;, Income &lt;dbl&gt;\n\n\nThe first data step in EDA is to check for missing values. This data was already cleaned so missing values are not expected. Using is.na() shows that there are in fact no missing values.\n\n# check for missing values in each column\ncolSums(is.na(diabetes_data))\n\n     Diabetes_binary               HighBP             HighChol \n                   0                    0                    0 \n           CholCheck                  BMI               Smoker \n                   0                    0                    0 \n              Stroke HeartDiseaseorAttack         PhysActivity \n                   0                    0                    0 \n              Fruits              Veggies    HvyAlcoholConsump \n                   0                    0                    0 \n       AnyHealthcare          NoDocbcCost              GenHlth \n                   0                    0                    0 \n            MentHlth             PhysHlth             DiffWalk \n                   0                    0                    0 \n                 Sex                  Age            Education \n                   0                    0                    0 \n              Income \n                   0 \n\n\nThe distinct() function can be used to verify that there are no missing values in a form other than NA. Looking at the output below, we can see that there is nothing unusual. Most of the categories have 0’s and 1’s which generally correspond to no (0) and yes(1), with the exception of Fruits, Veggies and Sex. The categories with other numbers have various meanings depending on the category but the numbers are consistent with what is expected based on the kaggle website’s Diabetes Health Indicators Dataset Notebook.\n\n#check for unusual values that could indicate missingness\nunique_values &lt;- diabetes_data |&gt;\n  distinct()\nunique_values\n\n# A tibble: 229,474 × 22\n   Diabetes_binary HighBP HighChol CholCheck   BMI Smoker Stroke\n             &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1               0      1        1         1    40      1      0\n 2               0      0        0         0    25      1      0\n 3               0      1        1         1    28      0      0\n 4               0      1        0         1    27      0      0\n 5               0      1        1         1    24      0      0\n 6               0      1        1         1    25      1      0\n 7               0      1        0         1    30      1      0\n 8               0      1        1         1    25      1      0\n 9               1      1        1         1    30      1      0\n10               0      0        0         1    24      0      0\n# ℹ 229,464 more rows\n# ℹ 15 more variables: HeartDiseaseorAttack &lt;dbl&gt;, PhysActivity &lt;dbl&gt;,\n#   Fruits &lt;dbl&gt;, Veggies &lt;dbl&gt;, HvyAlcoholConsump &lt;dbl&gt;, AnyHealthcare &lt;dbl&gt;,\n#   NoDocbcCost &lt;dbl&gt;, GenHlth &lt;dbl&gt;, MentHlth &lt;dbl&gt;, PhysHlth &lt;dbl&gt;,\n#   DiffWalk &lt;dbl&gt;, Sex &lt;dbl&gt;, Age &lt;dbl&gt;, Education &lt;dbl&gt;, Income &lt;dbl&gt;\n\n\nThe next step is to summarize the variables. The simplest method for doing so is to use describe() from the psych package. Below is the summary for this data. Nothing appears out of the ordinary in the summary. As we would expect, most have a minimum of 0 and a maximum of 1. BMI, MentHlth and PhysHlth are the only variables that are truly numeric and this is reflected in the summary.\n\n# summarize variables\ndescribe(diabetes_data)\n\n                     vars      n  mean   sd median trimmed  mad min max range\nDiabetes_binary         1 253680  0.14 0.35      0    0.05 0.00   0   1     1\nHighBP                  2 253680  0.43 0.49      0    0.41 0.00   0   1     1\nHighChol                3 253680  0.42 0.49      0    0.41 0.00   0   1     1\nCholCheck               4 253680  0.96 0.19      1    1.00 0.00   0   1     1\nBMI                     5 253680 28.38 6.61     27   27.68 4.45  12  98    86\nSmoker                  6 253680  0.44 0.50      0    0.43 0.00   0   1     1\nStroke                  7 253680  0.04 0.20      0    0.00 0.00   0   1     1\nHeartDiseaseorAttack    8 253680  0.09 0.29      0    0.00 0.00   0   1     1\nPhysActivity            9 253680  0.76 0.43      1    0.82 0.00   0   1     1\nFruits                 10 253680  0.63 0.48      1    0.67 0.00   0   1     1\nVeggies                11 253680  0.81 0.39      1    0.89 0.00   0   1     1\nHvyAlcoholConsump      12 253680  0.06 0.23      0    0.00 0.00   0   1     1\nAnyHealthcare          13 253680  0.95 0.22      1    1.00 0.00   0   1     1\nNoDocbcCost            14 253680  0.08 0.28      0    0.00 0.00   0   1     1\nGenHlth                15 253680  2.51 1.07      2    2.45 1.48   1   5     4\nMentHlth               16 253680  3.18 7.41      0    1.04 0.00   0  30    30\nPhysHlth               17 253680  4.24 8.72      0    1.77 0.00   0  30    30\nDiffWalk               18 253680  0.17 0.37      0    0.09 0.00   0   1     1\nSex                    19 253680  0.44 0.50      0    0.43 0.00   0   1     1\nAge                    20 253680  8.03 3.05      8    8.17 2.97   1  13    12\nEducation              21 253680  5.05 0.99      5    5.15 1.48   1   6     5\nIncome                 22 253680  6.05 2.07      7    6.35 1.48   1   8     7\n                      skew kurtosis   se\nDiabetes_binary       2.08     2.34 0.00\nHighBP                0.29    -1.92 0.00\nHighChol              0.31    -1.91 0.00\nCholCheck            -4.88    21.83 0.00\nBMI                   2.12    11.00 0.01\nSmoker                0.23    -1.95 0.00\nStroke                4.66    19.69 0.00\nHeartDiseaseorAttack  2.78     5.72 0.00\nPhysActivity         -1.20    -0.57 0.00\nFruits               -0.56    -1.69 0.00\nVeggies              -1.59     0.54 0.00\nHvyAlcoholConsump     3.85    12.85 0.00\nAnyHealthcare        -4.18    15.48 0.00\nNoDocbcCost           3.00     6.97 0.00\nGenHlth               0.42    -0.38 0.00\nMentHlth              2.72     6.44 0.01\nPhysHlth              2.21     3.50 0.02\nDiffWalk              1.77     1.15 0.00\nSex                   0.24    -1.94 0.00\nAge                  -0.36    -0.58 0.01\nEducation            -0.78     0.04 0.00\nIncome               -0.89    -0.28 0.00\n\n\nFor the most of the data, since it is categorical, we can look at contingency tables to get an idea of their relationship with diabetes status. For this purpose, the data is going to be manipulated first. The categorical variables will be converted to factors and the levels renamed to better communicate what the levels actually mean. For this purpose, factor() will be use as it allows renaming of levels and specifying if a factor is ordered, as some of the categories are.\n\n#convert categorical columns to factors\ndiabetes &lt;- diabetes_data |&gt;\n  mutate(Diabetes_binary = as.factor(Diabetes_binary),\n         Education = factor(Education, ordered = TRUE, levels = c(1:6),\n                            labels = c(\"No School\", \"Primary and Lower Secondary\", \"Some High School\", \n                                       \"Graduated High School\", \"Some College\", \"Graduated College\")),\n         Age = factor(Age,ordered = TRUE, levels = c(1:13), \n                       labels = c(\"18-24\", \"25-29\", \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \n                                  \"60-64\", \"65-69\", \"70-74\", \"75-79\", \"80+\")),\n         Income = factor(Income, ordered = TRUE, levels = c(1:8),\n                         labels = c(\"less than 10K\", \"10K to &lt; 15K\",\"15K to &lt; 20K\",\n                                    \"20K to &lt; 25K\", \"25K to &lt; 35K\",\"35K to &lt; 50K\", \n                                    \"50K to &lt; 75K\",\"75k or more\")),\n         Sex = factor(Sex, levels = c(0, 1), labels = c(\"Female\", \"Male\")),\n         DiffWalk = factor(DiffWalk, levels = c(0, 1), labels = c(\"No\", \"Yes\")),\n         NoDocbcCost = factor(NoDocbcCost, levels = c(0, 1), labels = c(\"No\", \"Yes\")),\n         AnyHealthcare = factor(AnyHealthcare, levels = c(0, 1), labels = c(\"No\", \"Yes\")),\n         HvyAlcoholConsump = factor(HvyAlcoholConsump, levels = c(0, 1), labels = c(\"No\", \"Yes\")),\n         PhysActivity = factor(PhysActivity, levels = c(0, 1), labels = c(\"No\", \"Yes\")),\n         HeartDiseaseorAttack = factor(HeartDiseaseorAttack, levels = c(0, 1), labels = c(\"No\", \"Yes\")),\n         Stroke = factor(Stroke, levels = c(0, 1), labels = c(\"No\", \"Yes\")),\n         Smoker = factor(Smoker, levels = c(0, 1), labels = c(\"No\", \"Yes\")),\n         CholCheck = factor(CholCheck, levels = c(0, 1), labels = c(\"No\", \"Yes\")),\n         HighBP = factor(HighBP, levels = c(0, 1), labels = c(\"No\", \"Yes\")),\n         HighChol = factor(HighChol, levels = c(0, 1), labels = c(\"No\", \"Yes\")),\n         Fruits = factor(Fruits, levels = c(0, 1), labels = c(\"None\", \"&gt;= 1/day\")),\n         Veggies = factor(Veggies, levels = c(0, 1), labels = c(\"None\", \"&gt;= 1/day\")),\n         GenHlth = factor(GenHlth, levels = c(1:5), labels = c(\"Excellent\", \"Very Good\", \"Good\", \"Fair\",\n                                                               \"Poor\"))\n         )\ndiabetes\n\n# A tibble: 253,680 × 22\n   Diabetes_binary HighBP HighChol CholCheck   BMI Smoker Stroke\n   &lt;fct&gt;           &lt;fct&gt;  &lt;fct&gt;    &lt;fct&gt;     &lt;dbl&gt; &lt;fct&gt;  &lt;fct&gt; \n 1 0               Yes    Yes      Yes          40 Yes    No    \n 2 0               No     No       No           25 Yes    No    \n 3 0               Yes    Yes      Yes          28 No     No    \n 4 0               Yes    No       Yes          27 No     No    \n 5 0               Yes    Yes      Yes          24 No     No    \n 6 0               Yes    Yes      Yes          25 Yes    No    \n 7 0               Yes    No       Yes          30 Yes    No    \n 8 0               Yes    Yes      Yes          25 Yes    No    \n 9 1               Yes    Yes      Yes          30 Yes    No    \n10 0               No     No       Yes          24 No     No    \n# ℹ 253,670 more rows\n# ℹ 15 more variables: HeartDiseaseorAttack &lt;fct&gt;, PhysActivity &lt;fct&gt;,\n#   Fruits &lt;fct&gt;, Veggies &lt;fct&gt;, HvyAlcoholConsump &lt;fct&gt;, AnyHealthcare &lt;fct&gt;,\n#   NoDocbcCost &lt;fct&gt;, GenHlth &lt;fct&gt;, MentHlth &lt;dbl&gt;, PhysHlth &lt;dbl&gt;,\n#   DiffWalk &lt;fct&gt;, Sex &lt;fct&gt;, Age &lt;ord&gt;, Education &lt;ord&gt;, Income &lt;ord&gt;\n\n\nNow that the data is properly formatted, contingency tables can be generated. The distribition of males and females appears to be relatively similar, with males appearing to have a slightly higher propensity to have prediabetes or diabetes compared to women. Because the difference amounts to less than a few percent, this variable will be excluded from the modeling process.\n\n#Contingency table for sex\ndiabetes |&gt;\n  group_by(Sex, Diabetes_binary) |&gt;\n  summarize(count = n(), .groups = \"drop\") |&gt;\n  pivot_wider(names_from = Diabetes_binary, values_from = count)\n\n# A tibble: 2 × 3\n  Sex       `0`   `1`\n  &lt;fct&gt;   &lt;int&gt; &lt;int&gt;\n1 Female 123563 18411\n2 Male    94771 16935\n\n\nWe can also use bar charts to visualize the proportions of category levels relative to the diabetes variable. This visualization makes it easier to see the similarities or differences in proportions.\n\nggplot(diabetes, aes(x = Sex, fill = Diabetes_binary)) + \n  geom_bar(position = \"fill\") +\n  labs(y = \"Count\", title = \"Proportion of individuals with and without diabetes by Gender\") +\n  scale_fill_discrete(name=\"Status\", labels = c(\"Not Diabetic\", \"Diabetic/Prediabetic\"))\n\n\n\n\n\n\n\n\nIn looking at income, the prevalence of diabetes generally decreases as income increases, indicating that socioeconomic status may be an important predictor of diabetes. This variable will be included in the model fitting process.\n\n#Contingency table for income\ndiabetes |&gt;\n  group_by(Income, Diabetes_binary) |&gt;\n  summarize(count = n(), .groups = \"drop\") |&gt;\n  pivot_wider(names_from = Diabetes_binary, values_from = count)\n\n# A tibble: 8 × 3\n  Income          `0`   `1`\n  &lt;ord&gt;         &lt;int&gt; &lt;int&gt;\n1 less than 10K  7428  2383\n2 10K to &lt; 15K   8697  3086\n3 15K to &lt; 20K  12426  3568\n4 20K to &lt; 25K  16081  4054\n5 25K to &lt; 35K  21379  4504\n6 35K to &lt; 50K  31179  5291\n7 50K to &lt; 75K  37954  5265\n8 75k or more   83190  7195\n\n\n\nggplot(diabetes, aes(x = Income, fill = Diabetes_binary)) + \n  geom_bar(position = \"fill\") +\n  labs(y = \"Count\", title = \"Proportion of individuals with and without diabetes by income level\") +\n  scale_fill_discrete(name=\"Status\", labels = c(\"Not Diabetic\", \"Diabetic/Prediabetic\")) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\nNext, we will examine the contingency table for eductation. Based on the output, it appears that the decreases with income. This is consistent with the contingency table for income, since income is generally associated with level of education. Looking at the bar chart, the patterns for income and education look nearly identical.\n\n#Contingency table for Education\ndiabetes |&gt;\n  group_by(Education, Diabetes_binary) |&gt;\n  summarize(count = n(), .groups = \"drop\") |&gt;\n  pivot_wider(names_from = Diabetes_binary, values_from = count)\n\n# A tibble: 6 × 3\n  Education                     `0`   `1`\n  &lt;ord&gt;                       &lt;int&gt; &lt;int&gt;\n1 No School                     127    47\n2 Primary and Lower Secondary  2860  1183\n3 Some High School             7182  2296\n4 Graduated High School       51684 11066\n5 Some College                59556 10354\n6 Graduated College           96925 10400\n\n\nLooking at the bar chart, the patterns for income and education look nearly identical.\n\nggplot(diabetes, aes(x = Education, fill = Diabetes_binary)) + \n  geom_bar(position = \"fill\") +\n  labs(y = \"Count\", title = \"Proportion of individuals with and without diabetes by education level\") +\n  scale_fill_discrete(name=\"Status\", labels = c(\"Not Diabetic\", \"Diabetic/Prediabetic\")) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\nThe potential relationship between education and income should be examined because these two variables could be correlated and therefore redundant, which could affect the model predictions. To get a view of the relationship, a contingency table can be created. In looking at the output below, it appears that the number of individuals generally decreases as income level increases at the lower education levels, and increases at the higher education levels, suggesting that these variables are correlated.\n\n#contingency table for education and income\ncont_table &lt;- diabetes |&gt;\n  group_by(Education, Income) |&gt;\n  summarize(count = n(), .groups = \"drop\") |&gt;\n  pivot_wider(names_from = Income, values_from = count)\ncont_table\n\n# A tibble: 6 × 9\n  Education         `less than 10K` `10K to &lt; 15K` `15K to &lt; 20K` `20K to &lt; 25K`\n  &lt;ord&gt;                       &lt;int&gt;          &lt;int&gt;          &lt;int&gt;          &lt;int&gt;\n1 No School                      37             25             28             18\n2 Primary and Lowe…             900            741            740            605\n3 Some High School             1536           1465           1709           1453\n4 Graduated High S…            3594           4692           6511           8029\n5 Some College                 2437           3315           4664           6310\n6 Graduated College            1307           1545           2342           3720\n# ℹ 4 more variables: `25K to &lt; 35K` &lt;int&gt;, `35K to &lt; 50K` &lt;int&gt;,\n#   `50K to &lt; 75K` &lt;int&gt;, `75k or more` &lt;int&gt;\n\n\nWe can look into these variables further by testing independence with a Chi-Sqare test. The analysis, shown below, indicates that these variables are correlated, as indicated by the low p-value. Since education has a low frequency of numbers in the “No School” category, dropping this variable from the model fitting is a practical choice.\n\ncont_matrix &lt;- as.matrix(cont_table[, -1])\nchisquare_test &lt;- chisq.test(cont_matrix)\nchisquare_test\n\n\n    Pearson's Chi-squared test\n\ndata:  cont_matrix\nX-squared = 60337, df = 35, p-value &lt; 2.2e-16\n\n\nNext, we will examine the contingency table for age. Based on the output, it appears that the incidence of diabetes generally increases with age, so this variable will be included in the model fitting.\n\n#Contingency table for age\ndiabetes |&gt;\n  group_by(Age, Diabetes_binary) |&gt;\n  summarize(count = n(), .groups = \"drop\") |&gt;\n  pivot_wider(names_from = Diabetes_binary, values_from = count)\n\n# A tibble: 13 × 3\n   Age     `0`   `1`\n   &lt;ord&gt; &lt;int&gt; &lt;int&gt;\n 1 18-24  5622    78\n 2 25-29  7458   140\n 3 30-34 10809   314\n 4 35-39 13197   626\n 5 40-44 15106  1051\n 6 45-49 18077  1742\n 7 50-54 23226  3088\n 8 55-59 26569  4263\n 9 60-64 27511  5733\n10 65-69 25636  6558\n11 70-74 18392  5141\n12 75-79 12577  3403\n13 80+   14154  3209\n\n\n\nggplot(diabetes, aes(x = Age, fill = Diabetes_binary)) + \n  geom_bar(position = \"fill\") +\n  labs(y = \"Count\", title = \"Proportion of individuals with and without diabetes by Age\") +\n  scale_fill_discrete(name=\"Status\", labels = c(\"Not Diabetic\", \"Diabetic/Prediabetic\")) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\nNext, the relationship between the diabetes variable and Fruits will be examined. The proportions for no fruit and 1 or more a day are similar, 0.129 vs 0.158) so this variable will be excluded from modeling.\n\n#Contingency table for Fruits\ndiabetes |&gt;\n  group_by(Fruits, Diabetes_binary) |&gt;\n  summarize(count = n(), .groups = \"drop\") |&gt;\n  pivot_wider(names_from = Diabetes_binary, values_from = count)\n\n# A tibble: 2 × 3\n  Fruits      `0`   `1`\n  &lt;fct&gt;     &lt;int&gt; &lt;int&gt;\n1 None      78129 14653\n2 &gt;= 1/day 140205 20693\n\n\nSimilarly, vegetable consumption does not appear to be an important variable for diabetes classification, with proportions of 0.18 and 0.13 for the diabetes category.\n\n#Contingency table for Veggies\ndiabetes |&gt;\n  group_by(Veggies, Diabetes_binary) |&gt;\n  summarize(count = n(), .groups = \"drop\") |&gt;\n  pivot_wider(names_from = Diabetes_binary, values_from = count)\n\n# A tibble: 2 × 3\n  Veggies     `0`   `1`\n  &lt;fct&gt;     &lt;int&gt; &lt;int&gt;\n1 None      39229  8610\n2 &gt;= 1/day 179105 26736\n\n\nThe contingency table for PhysActivity shows that the proportion of those with diabetes who do not exercise is nearly double that of those without diabetes who do exercise. This variable may be important for diabetes prediction, although it’s relevance may be more closely tied to how much a person exercises in the time period specified. The question to respondents was if they had engaged in any physical activity in the last 30 days so it does not take into account frequency of exercise in that time period. However, may people who exercise at all try to do so regularly, so this variable will be included in the modeling process.\n\n#Contingency table for PhysActivity\ndiabetes |&gt;\n  group_by(PhysActivity, Diabetes_binary) |&gt;\n  summarize(count = n(), .groups = \"drop\") |&gt;\n  pivot_wider(names_from = Diabetes_binary, values_from = count)\n\n# A tibble: 2 × 3\n  PhysActivity    `0`   `1`\n  &lt;fct&gt;         &lt;int&gt; &lt;int&gt;\n1 No            48701 13059\n2 Yes          169633 22287\n\n\n\nggplot(diabetes, aes(x = PhysActivity, fill = Diabetes_binary)) + \n  geom_bar(position = \"fill\") +\n  labs(y = \"Count\", title = \"Proportion of individuals with and without diabetes by Physical Activity\") +\n  scale_fill_discrete(name=\"Status\", labels = c(\"Not Diabetic\", \"Diabetic/Prediabetic\"))\n\n\n\n\n\n\n\n\nThe HvyAlcoholConsump variable may be important for diabetes prediction. The contingency table below shows that the proportion of individuals who don’t drink alcohol heavily and have diabetes is close to 3 times that of those who do drink heavily and have diabetes.\n\n#Contingency table for HvyAlcoholConsum\ndiabetes |&gt;\n  group_by(HvyAlcoholConsump, Diabetes_binary) |&gt;\n  summarize(count = n(), .groups = \"drop\") |&gt;\n  pivot_wider(names_from = Diabetes_binary, values_from = count)\n\n# A tibble: 2 × 3\n  HvyAlcoholConsump    `0`   `1`\n  &lt;fct&gt;              &lt;int&gt; &lt;int&gt;\n1 No                204910 34514\n2 Yes                13424   832\n\n\n\nggplot(diabetes, aes(x = HvyAlcoholConsump, fill = Diabetes_binary)) + \n  geom_bar(position = \"fill\") +\n  labs(y = \"Count\", title = \"Proportion of individuals with and without \n       diabetes by Alcohol Consumption Activity\") +\n  scale_fill_discrete(name=\"Status\", labels = c(\"Not Diabetic\", \"Diabetic/Prediabetic\"))\n\n\n\n\n\n\n\n\nThe NoDocbcCost represents whether an individual did or did not see a doctor because of the healthcare cost. The contingency table shows that the proportions of individuals with diabetes for the two NoDocBcCost levels were similar, at 0.136 and 0.175. Because of the similarity, this variable will not be included in model fitting.\n\n#Contingency table for NoDocbcCost\ndiabetes |&gt;\n  group_by(NoDocbcCost, Diabetes_binary) |&gt;\n  summarize(count = n(), .groups = \"drop\") |&gt;\n  pivot_wider(names_from = Diabetes_binary, values_from = count)\n\n# A tibble: 2 × 3\n  NoDocbcCost    `0`   `1`\n  &lt;fct&gt;        &lt;int&gt; &lt;int&gt;\n1 No          200722 31604\n2 Yes          17612  3742\n\n\nThe AnyHealthcare variable is similar in proportion for both levels for those with diabetes, with proportions of 0.115 and 0.140. This variable will be excluded from model fitting.\n\n#Contingency table for AnyHealthcare\ndiabetes |&gt;\n  group_by(AnyHealthcare, Diabetes_binary) |&gt;\n  summarize(count = n(), .groups = \"drop\") |&gt;\n  pivot_wider(names_from = Diabetes_binary, values_from = count)\n\n# A tibble: 2 × 3\n  AnyHealthcare    `0`   `1`\n  &lt;fct&gt;          &lt;int&gt; &lt;int&gt;\n1 No             10995  1422\n2 Yes           207339 33924\n\n\nThe contingency table below for the HeartDiseaseorAttack variable suggests that this variable may be important for prediction. Nearly 32% of respondents who had heart disease or a heart attack had diabetes, compared to 12% of those who did not have these conditions.\n\n#Contingency table for NHeartDiseaseorAttack\ndiabetes |&gt;\n  group_by(HeartDiseaseorAttack, Diabetes_binary) |&gt;\n  summarize(count = n(), .groups = \"drop\") |&gt;\n  pivot_wider(names_from = Diabetes_binary, values_from = count)\n\n# A tibble: 2 × 3\n  HeartDiseaseorAttack    `0`   `1`\n  &lt;fct&gt;                 &lt;int&gt; &lt;int&gt;\n1 No                   202319 27468\n2 Yes                   16015  7878\n\n\nBelow is a visualization of the HeartDiseaseorAttack variable.\n\nggplot(diabetes, aes(x = HeartDiseaseorAttack, fill = Diabetes_binary)) + \n  geom_bar(position = \"fill\") +\n  labs(y = \"Count\", title = \"Proportion of individuals with and without \n       diabetes by Heart Disease or Hart Attack Status\") +\n  scale_fill_discrete(name=\"Status\", labels = \n                        c(\"Not Diabetic\", \"Diabetic/Prediabetic\"))\n\n\n\n\n\n\n\n\nThe contingency table for stroke is shown below. Nearly 32% of those respondents who had a stroke had diabetes, compared to those who didn’t have a stroke (13%). This suggests that this variable may be important for predicition.\n\n#Contingency table for Stroke\ndiabetes |&gt;\n  group_by(Stroke, Diabetes_binary) |&gt;\n  summarize(count = n(), .groups = \"drop\") |&gt;\n  pivot_wider(names_from = Diabetes_binary, values_from = count)\n\n# A tibble: 2 × 3\n  Stroke    `0`   `1`\n  &lt;fct&gt;   &lt;int&gt; &lt;int&gt;\n1 No     211310 32078\n2 Yes      7024  3268\n\n\nThe Smoker variable does not appear to be particularly important for diabetes prediction an the proportions are similar. This seems contradictory since it is known that smokers are more likely to have diabetes since nicotine makes cells less responsive to insulin. But the question for respondents was “Have you smoked at least 100 cigarettes (5 packs) in your entire life?” which communicates nothing about when in their life that was and if they are currently smoking. Consequently, this variable will be left out of the model fitting.\n\n#Contingency table for Smoker\ndiabetes |&gt;\n  group_by(Smoker, Diabetes_binary) |&gt;\n  summarize(count = n(), .groups = \"drop\") |&gt;\n  pivot_wider(names_from = Diabetes_binary, values_from = count)\n\n# A tibble: 2 × 3\n  Smoker    `0`   `1`\n  &lt;fct&gt;   &lt;int&gt; &lt;int&gt;\n1 No     124228 17029\n2 Yes     94106 18317\n\n\n\nggplot(diabetes, aes(x = Smoker, fill = Diabetes_binary)) + \n  geom_bar(position = \"fill\") +\n  labs(y = \"Count\", title = \"Proportion of Individuals with and without \n       Diabetes by Smoking Status\") +\n  scale_fill_discrete(name=\"Status\", labels = \n                        c(\"Not Diabetic\", \"Diabetic/Prediabetic\"))\n\n\n\n\n\n\n\n\nThe contingency table for CholCheck shows that the proportions of those who have had their cholesterol checked in the last 5 years and those who have not and have diabetes are 0.025 and 0.144. While the difference may be significant, people who are sick or have chronic conditions are more likely to have their cholesterol checked more frequently than healthy individuals. Thus this variable is not necessarily important for prediction, but rather reflective of diabetes management, which may also be accompanied by other health conditions. For these reasons, this variable will be excluded from the model fitting.\n\n#Contingency table for CholCheck\ndiabetes |&gt;\n  group_by(CholCheck, Diabetes_binary) |&gt;\n  summarize(count = n(), .groups = \"drop\") |&gt;\n  pivot_wider(names_from = Diabetes_binary, values_from = count)\n\n# A tibble: 2 × 3\n  CholCheck    `0`   `1`\n  &lt;fct&gt;      &lt;int&gt; &lt;int&gt;\n1 No          9229   241\n2 Yes       209105 35105\n\n\nThe contingency table for DiffWalk is below. For individuals with diabetes, the proportion of those who responded yes to difficulty walking or climbing stairs is 0.307 compared to that of those who responded no, 0.105. This variable may be important for predicting diabetes and will be included in model fitting.\n\n#Contingency table for DiffWalk\ndiabetes |&gt;\n  group_by(DiffWalk, Diabetes_binary) |&gt;\n  summarize(count = n(), .groups = \"drop\") |&gt;\n  pivot_wider(names_from = Diabetes_binary, values_from = count)\n\n# A tibble: 2 × 3\n  DiffWalk    `0`   `1`\n  &lt;fct&gt;     &lt;int&gt; &lt;int&gt;\n1 No       188780 22225\n2 Yes       29554 13121\n\n\n\n8742/(8742+136109)\n\n[1] 0.06035167\n\n26604/(26604+82225)\n\n[1] 0.2444569\n\n\nThe contingency table for HighChol shows proportions of 0.08 for those who don’t have high cholesterol but have diabetes, compared to 0.22 for those how have high cholesterol and diabetes. Since this is more than a 2-fold difference and diabetes and high blood pressure often occur together, this variable will be included in the model fitting.\n\n#Contingency table for HighChol\ndiabetes |&gt;\n  group_by(HighChol, Diabetes_binary) |&gt;\n  summarize(count = n(), .groups = \"drop\") |&gt;\n  pivot_wider(names_from = Diabetes_binary, values_from = count)\n\n# A tibble: 2 × 3\n  HighChol    `0`   `1`\n  &lt;fct&gt;     &lt;int&gt; &lt;int&gt;\n1 No       134429 11660\n2 Yes       83905 23686\n\n\nSimilar to HighChol, HighBP among those with diabetes was 4 times that of those without high blood pressure. High blood pressure often occurs in conjunction with diabetes as part of metabolic syndrome and so will be included in the model fitting.\n\n#Contingency table for HighBP\ndiabetes |&gt;\n  group_by(HighBP, Diabetes_binary) |&gt;\n  summarize(count = n(), .groups = \"drop\") |&gt;\n  pivot_wider(names_from = Diabetes_binary, values_from = count)\n\n# A tibble: 2 × 3\n  HighBP    `0`   `1`\n  &lt;fct&gt;   &lt;int&gt; &lt;int&gt;\n1 No     136109  8742\n2 Yes     82225 26604\n\n\nWe can look at the distribution of BMI in this data by examining a histogram. The distribution is relatively normal with some right skew. Since the data is unbalanced, with more respondents not having diabetes, the skewed portion of the histogram likely corresponds to individuals with diabetes. Generally speaking, a BMI between 18.5-24.9 corresponds to a normal weight.\n\nggplot(data = diabetes, aes(BMI)) +\n  geom_histogram(binwidth = 2, fill = \"darksalmon\", color = \"black\") +\n  labs(y = \"Count\")\n\n\n\n\n\n\n\n\nTo view the strength of the relationship between BMI and diabetes, we can use point-biserial correlation, which allows calculation of the correlation between a dichotomous variable and a continuous variable. Point-biserial correlation is a modified form of Pearson correlation and can be performed using cor.test(). Both variables need to be numeric. The output p-value and “true correlation” indicate that the correlation between diabetes and BMI is significant, which is consistent with what is known about type II diabetes. This variable will be included in modeling.\n\n#convert Diabetes_binary to numeric\ndiabetes_corr &lt;- diabetes |&gt;\n  select(Diabetes_binary, BMI) |&gt;\n  mutate(Diabetes_binary = as.numeric(Diabetes_binary))\n#Perform Point-Biserial Correlation\ncor.test(diabetes_corr$BMI, diabetes_corr$Diabetes_binary)\n\n\n    Pearson's product-moment correlation\n\ndata:  diabetes_corr$BMI and diabetes_corr$Diabetes_binary\nt = 111.88, df = 253678, p-value &lt; 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.2131315 0.2205484\nsample estimates:\n      cor \n0.2168431 \n\n\nMentHlth\n\nggplot(data = diabetes, aes(MentHlth)) +\n  geom_histogram(binwidth = 2, fill = \"darksalmon\", color = \"black\") +\n  labs(y = \"Count\")\n\n\n\n\n\n\n\n\nPhysHlth\n\nggplot(data = diabetes, aes(PhysHlth)) +\n  geom_histogram(binwidth = 2, fill = \"darksalmon\", color = \"black\") +\n  labs(y = \"Count\")\n\n\n\n\n\n\n\n\nModel Fitting"
  }
]