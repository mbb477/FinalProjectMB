[
  {
    "objectID": "Modeling.html",
    "href": "Modeling.html",
    "title": "Model Fitting of the Diabetes Health Indicators Dataset",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "Modeling.html#quarto",
    "href": "Modeling.html#quarto",
    "title": "Model Fitting of the Diabetes Health Indicators Dataset",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "Modeling.html#running-code",
    "href": "Modeling.html#running-code",
    "title": "Model Fitting of the Diabetes Health Indicators Dataset",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "EDA.html",
    "href": "EDA.html",
    "title": "Exploratory Data Analysis of the Diabetes Health Indicators Set",
    "section": "",
    "text": "Introduction\nThe Behavioral Risk Factor Surveillance System (BRFSS) is a system run by the Centers for Disease Control and Prevention (CDC) that uses telephone surveys to collect health-related information from individuals in the United States every year. The system began in 1984 and collects more than 400,000 responses each year. The Diabetes Health Indicators Dataset that will be discussed here is a subset of the data obtained from the BRFSS for 2015. This data set contains 21 of the original 330 variables and 253.680 of the 441,455 original responses. Retention of the 21 variables in this data was based on what was believed to have potential relevance for diabetes.\nThe goal of this document is to use exploratory data analysis (EDA) to understand the data through validation, examining missingness, cleaning up the data and investigating distributions. This information can also help us decide what variables to include in our model. The end goal of this project is to obtain the best model to predict diabetes. Details of the EDA are presented below. The response variable is Diabetes_binary, where 0 indicates that the individual does not have diabetes and 1 means the individual has prediabetes or diabetes. The variables chosen to be included in the modeling process are ……. body mass index (BMI)…..\n\n\nEDA Analysis\nThe first step is to read in the data. Since the data is a csv file, this can be done using read_csv() from tidyverse.\n\nlibrary(tidyverse)\nlibrary(psych)\nlibrary(caret)\ndiabetes_data &lt;- read_csv(\"diabetes_binary_health_indicators_BRFSS2015.csv\")\ndiabetes_data\n\n# A tibble: 253,680 × 22\n   Diabetes_binary HighBP HighChol CholCheck   BMI Smoker Stroke\n             &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1               0      1        1         1    40      1      0\n 2               0      0        0         0    25      1      0\n 3               0      1        1         1    28      0      0\n 4               0      1        0         1    27      0      0\n 5               0      1        1         1    24      0      0\n 6               0      1        1         1    25      1      0\n 7               0      1        0         1    30      1      0\n 8               0      1        1         1    25      1      0\n 9               1      1        1         1    30      1      0\n10               0      0        0         1    24      0      0\n# ℹ 253,670 more rows\n# ℹ 15 more variables: HeartDiseaseorAttack &lt;dbl&gt;, PhysActivity &lt;dbl&gt;,\n#   Fruits &lt;dbl&gt;, Veggies &lt;dbl&gt;, HvyAlcoholConsump &lt;dbl&gt;, AnyHealthcare &lt;dbl&gt;,\n#   NoDocbcCost &lt;dbl&gt;, GenHlth &lt;dbl&gt;, MentHlth &lt;dbl&gt;, PhysHlth &lt;dbl&gt;,\n#   DiffWalk &lt;dbl&gt;, Sex &lt;dbl&gt;, Age &lt;dbl&gt;, Education &lt;dbl&gt;, Income &lt;dbl&gt;\n\nunique_values &lt;- unique(diabetes_data$Income)\nunique_values\n\n[1] 3 1 8 6 4 7 2 5\n\n\nThe first data step in EDA is to check for missing values. This data was already cleaned so missing values are not expected. Using is.na() shows that there are in fact no missing values.\n\ncolSums(is.na(diabetes_data))\n\n     Diabetes_binary               HighBP             HighChol \n                   0                    0                    0 \n           CholCheck                  BMI               Smoker \n                   0                    0                    0 \n              Stroke HeartDiseaseorAttack         PhysActivity \n                   0                    0                    0 \n              Fruits              Veggies    HvyAlcoholConsump \n                   0                    0                    0 \n       AnyHealthcare          NoDocbcCost              GenHlth \n                   0                    0                    0 \n            MentHlth             PhysHlth             DiffWalk \n                   0                    0                    0 \n                 Sex                  Age            Education \n                   0                    0                    0 \n              Income \n                   0 \n\n\nThe distinct() function can be used to verify that there are no missing values in a form other than NA. Looking at the output below, we can see that there is nothing unusual. Most of the categories have 0’s and 1’s which generally correspond to no (0) and yes(1), with the exception of Fruits, Veggies and Sex. The categories with other numbers have various meanings depending on the category but the numbers are consistent with what is expected based on the kaggle website’s Diabetes Health Indicators Dataset Notebook.\n\nunique_values &lt;- diabetes_data |&gt;\n  distinct()\nunique_values\n\n# A tibble: 229,474 × 22\n   Diabetes_binary HighBP HighChol CholCheck   BMI Smoker Stroke\n             &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1               0      1        1         1    40      1      0\n 2               0      0        0         0    25      1      0\n 3               0      1        1         1    28      0      0\n 4               0      1        0         1    27      0      0\n 5               0      1        1         1    24      0      0\n 6               0      1        1         1    25      1      0\n 7               0      1        0         1    30      1      0\n 8               0      1        1         1    25      1      0\n 9               1      1        1         1    30      1      0\n10               0      0        0         1    24      0      0\n# ℹ 229,464 more rows\n# ℹ 15 more variables: HeartDiseaseorAttack &lt;dbl&gt;, PhysActivity &lt;dbl&gt;,\n#   Fruits &lt;dbl&gt;, Veggies &lt;dbl&gt;, HvyAlcoholConsump &lt;dbl&gt;, AnyHealthcare &lt;dbl&gt;,\n#   NoDocbcCost &lt;dbl&gt;, GenHlth &lt;dbl&gt;, MentHlth &lt;dbl&gt;, PhysHlth &lt;dbl&gt;,\n#   DiffWalk &lt;dbl&gt;, Sex &lt;dbl&gt;, Age &lt;dbl&gt;, Education &lt;dbl&gt;, Income &lt;dbl&gt;\n\n\nThe next step is to summarize the variables. The simplest method for doing so is to use describe() from the psych package. Below is the summary for this data. Nothing appears out of the ordinary in the summary. As we would expect, most have a minimum of 0 and a maximum of 1. BMI, MentHlth and PhysHlth are the only variables that are truly numeric and this is reflected in the summary.\n\ndescribe(diabetes_data)\n\n                     vars      n  mean   sd median trimmed  mad min max range\nDiabetes_binary         1 253680  0.14 0.35      0    0.05 0.00   0   1     1\nHighBP                  2 253680  0.43 0.49      0    0.41 0.00   0   1     1\nHighChol                3 253680  0.42 0.49      0    0.41 0.00   0   1     1\nCholCheck               4 253680  0.96 0.19      1    1.00 0.00   0   1     1\nBMI                     5 253680 28.38 6.61     27   27.68 4.45  12  98    86\nSmoker                  6 253680  0.44 0.50      0    0.43 0.00   0   1     1\nStroke                  7 253680  0.04 0.20      0    0.00 0.00   0   1     1\nHeartDiseaseorAttack    8 253680  0.09 0.29      0    0.00 0.00   0   1     1\nPhysActivity            9 253680  0.76 0.43      1    0.82 0.00   0   1     1\nFruits                 10 253680  0.63 0.48      1    0.67 0.00   0   1     1\nVeggies                11 253680  0.81 0.39      1    0.89 0.00   0   1     1\nHvyAlcoholConsump      12 253680  0.06 0.23      0    0.00 0.00   0   1     1\nAnyHealthcare          13 253680  0.95 0.22      1    1.00 0.00   0   1     1\nNoDocbcCost            14 253680  0.08 0.28      0    0.00 0.00   0   1     1\nGenHlth                15 253680  2.51 1.07      2    2.45 1.48   1   5     4\nMentHlth               16 253680  3.18 7.41      0    1.04 0.00   0  30    30\nPhysHlth               17 253680  4.24 8.72      0    1.77 0.00   0  30    30\nDiffWalk               18 253680  0.17 0.37      0    0.09 0.00   0   1     1\nSex                    19 253680  0.44 0.50      0    0.43 0.00   0   1     1\nAge                    20 253680  8.03 3.05      8    8.17 2.97   1  13    12\nEducation              21 253680  5.05 0.99      5    5.15 1.48   1   6     5\nIncome                 22 253680  6.05 2.07      7    6.35 1.48   1   8     7\n                      skew kurtosis   se\nDiabetes_binary       2.08     2.34 0.00\nHighBP                0.29    -1.92 0.00\nHighChol              0.31    -1.91 0.00\nCholCheck            -4.88    21.83 0.00\nBMI                   2.12    11.00 0.01\nSmoker                0.23    -1.95 0.00\nStroke                4.66    19.69 0.00\nHeartDiseaseorAttack  2.78     5.72 0.00\nPhysActivity         -1.20    -0.57 0.00\nFruits               -0.56    -1.69 0.00\nVeggies              -1.59     0.54 0.00\nHvyAlcoholConsump     3.85    12.85 0.00\nAnyHealthcare        -4.18    15.48 0.00\nNoDocbcCost           3.00     6.97 0.00\nGenHlth               0.42    -0.38 0.00\nMentHlth              2.72     6.44 0.01\nPhysHlth              2.21     3.50 0.02\nDiffWalk              1.77     1.15 0.00\nSex                   0.24    -1.94 0.00\nAge                  -0.36    -0.58 0.01\nEducation            -0.78     0.04 0.00\nIncome               -0.89    -0.28 0.00\n\n\nFor the most of the data, since it is categorical, we can look at contingency tables to get an idea of their relationship with diabetes status. For this purpose, the data is going to be manipulated first. The categorical variables will be converted to factors and the levels renamed to better communicate what the levels actually mean. For this purpose, factor() will be use as it allows renaming of levels and specifying if a factor is ordered, as some of the categories are.\n\ndiabetes &lt;- diabetes_data |&gt;\n  mutate(Diabetes_binary = as.factor(Diabetes_binary),\n         Education = factor(Education, ordered = TRUE, levels = c(1:6),\n                            labels = c(\"No School\", \"Primary and Lower Secondary\", \"Some High School\", \n                                       \"Graduated High School\", \"Some College\", \"Graduated College\")),\n         Age = factor(Age,ordered = TRUE, levels = c(1:13), \n                       labels = c(\"18-24\", \"25-29\", \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \n                                  \"60-64\", \"65-69\", \"70-74\", \"75-79\", \"80+\")),\n         Income = factor(Income, ordered = TRUE, levels = c(1:8),\n                         labels = c(\"less than 10K\", \"10K to &lt; 15K\",\"15K to &lt; 20K\",\n                                    \"20K to &lt; 25K\", \"25K to &lt; 35K\",\"35K to &lt; 50K\", \n                                    \"50K to &lt; 75K\",\"75k or more\")),\n         Sex = factor(Sex, levels = c(0, 1), labels = c(\"Female\", \"Male\")),\n         DiffWalk = factor(DiffWalk, levels = c(0, 1), labels = c(\"No\", \"Yes\")),\n         NoDocbcCost = factor(NoDocbcCost, levels = c(0, 1), labels = c(\"No\", \"Yes\")),\n         AnyHealthcare = factor(AnyHealthcare, levels = c(0, 1), labels = c(\"No\", \"Yes\")),\n         HvyAlcoholConsump = factor(HvyAlcoholConsump, levels = c(0, 1), labels = c(\"No\", \"Yes\")),\n         PhysActivity = factor(PhysActivity, levels = c(0, 1), labels = c(\"No\", \"Yes\")),\n         HeartDiseaseorAttack = factor(HeartDiseaseorAttack, levels = c(0, 1), labels = c(\"No\", \"Yes\")),\n         Stroke = factor(Stroke, levels = c(0, 1), labels = c(\"No\", \"Yes\")),\n         Smoker = factor(Smoker, levels = c(0, 1), labels = c(\"No\", \"Yes\")),\n         CholCheck = factor(CholCheck, levels = c(0, 1), labels = c(\"No\", \"Yes\")),\n         HighBP = factor(HighBP, levels = c(0, 1), labels = c(\"No\", \"Yes\")),\n         HighChol = factor(HighChol, levels = c(0, 1), labels = c(\"No\", \"Yes\")),\n         Fruits = factor(Fruits, levels = c(0, 1), labels = c(\"None\", \"&gt;= 1/day\")),\n         Veggies = factor(Veggies, levels = c(0, 1), labels = c(\"None\", \"&gt;= 1/day\"))\n         )\ndiabetes\n\n# A tibble: 253,680 × 22\n   Diabetes_binary HighBP HighChol CholCheck   BMI Smoker Stroke\n   &lt;fct&gt;           &lt;fct&gt;  &lt;fct&gt;    &lt;fct&gt;     &lt;dbl&gt; &lt;fct&gt;  &lt;fct&gt; \n 1 0               Yes    Yes      Yes          40 Yes    No    \n 2 0               No     No       No           25 Yes    No    \n 3 0               Yes    Yes      Yes          28 No     No    \n 4 0               Yes    No       Yes          27 No     No    \n 5 0               Yes    Yes      Yes          24 No     No    \n 6 0               Yes    Yes      Yes          25 Yes    No    \n 7 0               Yes    No       Yes          30 Yes    No    \n 8 0               Yes    Yes      Yes          25 Yes    No    \n 9 1               Yes    Yes      Yes          30 Yes    No    \n10 0               No     No       Yes          24 No     No    \n# ℹ 253,670 more rows\n# ℹ 15 more variables: HeartDiseaseorAttack &lt;fct&gt;, PhysActivity &lt;fct&gt;,\n#   Fruits &lt;fct&gt;, Veggies &lt;fct&gt;, HvyAlcoholConsump &lt;fct&gt;, AnyHealthcare &lt;fct&gt;,\n#   NoDocbcCost &lt;fct&gt;, GenHlth &lt;dbl&gt;, MentHlth &lt;dbl&gt;, PhysHlth &lt;dbl&gt;,\n#   DiffWalk &lt;fct&gt;, Sex &lt;fct&gt;, Age &lt;ord&gt;, Education &lt;ord&gt;, Income &lt;ord&gt;\n\n\nNow that the data is properly formatted, contingency tables can be generated. The distribition of males and females appears to be relatively similar, with males appearing to have a slightly higher propensity to have prediabetes or diabetes compared to women. Because the difference amounts to less than a few percent, this variable will be excluded from the modeling process.\n\ndiabetes_data |&gt;\n  group_by(Sex, Diabetes_binary) |&gt;\n  summarize(count = n(), .groups = \"drop\") |&gt;\n  pivot_wider(names_from = Diabetes_binary, values_from = count)\n\n# A tibble: 2 × 3\n    Sex    `0`   `1`\n  &lt;dbl&gt;  &lt;int&gt; &lt;int&gt;\n1     0 123563 18411\n2     1  94771 16935\n\n\nIn looking at income, the prevalence of diabetes generally decreases as income increases, indicating that socioeconomic status may be an important predictor of diabetes. This variable will be included in the model fitting process.\n\ndiabetes_data |&gt;\n  group_by(Income, Diabetes_binary) |&gt;\n  summarize(count = n(), .groups = \"drop\") |&gt;\n  pivot_wider(names_from = Diabetes_binary, values_from = count)\n\n# A tibble: 8 × 3\n  Income   `0`   `1`\n   &lt;dbl&gt; &lt;int&gt; &lt;int&gt;\n1      1  7428  2383\n2      2  8697  3086\n3      3 12426  3568\n4      4 16081  4054\n5      5 21379  4504\n6      6 31179  5291\n7      7 37954  5265\n8      8 83190  7195\n\n\nWe can look at the distribution of BMI in this data by examining a histogram. The distribution is relatively normal with some right skew. Since the data is unbalanced, with more respondents not having diabetes, the skewed portion of the histogram likely corresponds to individuals with diabetes. Generally speaking, a BMI between 18.5-24.9 corresponds to a normal weight.\n\nggplot(data = diabetes_data, aes(BMI)) +\n  geom_histogram(binwidth = 2, fill = \"darksalmon\", color = \"black\") +\n  labs(y = \"Count\")"
  }
]